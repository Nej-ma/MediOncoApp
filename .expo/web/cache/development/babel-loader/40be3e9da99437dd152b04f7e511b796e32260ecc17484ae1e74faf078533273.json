{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Picker } from '@react-native-picker/picker';\nimport { getServiceList, getDoctorList } from \"../../../features/patients/services/patientsService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AgendaLibellePicker = function AgendaLibellePicker(_ref) {\n  var onServiceDoctorSelected = _ref.onServiceDoctorSelected;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    services = _useState2[0],\n    setServices = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedService = _useState4[0],\n    setSelectedService = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDoctor = _useState6[0],\n    setSelectedDoctor = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    doctors = _useState8[0],\n    setDoctors = _useState8[1];\n  var doctorOpacity = useRef(new Animated.Value(0)).current;\n  var getToken = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('auth_token');\n      return token;\n    });\n    return function getToken() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchServiceList();\n  }, []);\n  useEffect(function () {\n    fetchDoctorList(selectedService);\n  }, [selectedService]);\n  var fetchServiceList = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var token = yield getToken();\n      var fetchedServices = yield getServiceList(token);\n      if (Array.isArray(fetchedServices)) {\n        setServices(fetchedServices);\n      } else {\n        console.error(\"Fetched services is not an array.\");\n      }\n    });\n    return function fetchServiceList() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchDoctorList = function () {\n    var _ref4 = _asyncToGenerator(function* (specialty) {\n      console.log('fetchDoctorList', specialty);\n      if (!specialty) {\n        setDoctors([]);\n        setSelectedDoctor('');\n        onServiceDoctorSelected('', '');\n        return;\n      }\n      try {\n        var token = yield getToken();\n        var fetchedDoctors = yield getDoctorList(specialty, token);\n        console.log('fetchedDoctors', fetchedDoctors);\n        setDoctors(fetchedDoctors.map(function (doctor) {\n          return doctor.name;\n        }));\n        animateDoctor();\n        if (fetchedDoctors.length > 0) {\n          var firstDoctorId = fetchedDoctors[0].id;\n          console.log('firstDoctorId', firstDoctorId);\n          setSelectedDoctor(firstDoctorId);\n          onServiceDoctorSelected(specialty, firstDoctorId);\n        }\n      } catch (error) {\n        console.error('Error fetching doctor list:', error);\n      }\n    });\n    return function fetchDoctorList(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var animateDoctor = function animateDoctor() {\n    Animated.timing(doctorOpacity, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  };\n  var handleServiceChange = function handleServiceChange(service) {\n    setSelectedService(service);\n    setSelectedDoctor('');\n  };\n  var handleDoctorChange = function handleDoctorChange(doctor) {\n    setSelectedDoctor(doctor);\n    onServiceDoctorSelected(selectedService, doctor);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"Service:\"\n    }), _jsxs(Picker, {\n      selectedValue: selectedService,\n      onValueChange: handleServiceChange,\n      style: styles.picker,\n      children: [_jsx(Picker.Item, {\n        label: \"Choisir un service\",\n        value: \"\"\n      }), services.map(function (service, index) {\n        return _jsx(Picker.Item, {\n          label: service,\n          value: service\n        }, index);\n      })]\n    }), selectedService && doctors.length > 0 && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Doctor:\"\n      }), _jsx(Animated.View, {\n        style: {\n          opacity: doctorOpacity\n        },\n        children: _jsx(Picker, {\n          selectedValue: selectedDoctor,\n          onValueChange: handleDoctorChange,\n          style: styles.picker2,\n          children: doctors.map(function (doctor, index) {\n            return _jsx(Picker.Item, {\n              label: doctor,\n              value: doctor\n            }, index);\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  label: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd'\n  },\n  picker: {\n    marginBottom: 1,\n    height: 40\n  },\n  picker2: {\n    marginBottom: 15,\n    height: 40\n  }\n});\nexport default AgendaLibellePicker;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","StyleSheet","Animated","Picker","getServiceList","getDoctorList","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AgendaLibellePicker","_ref","onServiceDoctorSelected","_useState","_useState2","_slicedToArray","services","setServices","_useState3","_useState4","selectedService","setSelectedService","_useState5","_useState6","selectedDoctor","setSelectedDoctor","_useState7","_useState8","doctors","setDoctors","doctorOpacity","Value","current","getToken","_ref2","_asyncToGenerator","token","getItem","apply","arguments","fetchServiceList","fetchDoctorList","_ref3","fetchedServices","Array","isArray","console","error","_ref4","specialty","log","fetchedDoctors","map","doctor","name","animateDoctor","length","firstDoctorId","id","_x","timing","toValue","duration","useNativeDriver","start","handleServiceChange","service","handleDoctorChange","children","style","styles","label","selectedValue","onValueChange","picker","Item","value","index","opacity","picker2","create","fontSize","fontWeight","borderBottomWidth","borderBottomColor","marginBottom","height"],"sources":["C:/Users/littl/Desktop/saeapp/frontend/src/features/patients/components/AgendaLibellePicker.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, StyleSheet, Animated } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { getServiceList, getDoctorList } from '../../../features/patients/services/patientsService';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst AgendaLibellePicker = ({ onServiceDoctorSelected }) => {\r\n    const [services, setServices] = useState([]);\r\n    const [selectedService, setSelectedService] = useState('');\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n    const [doctors, setDoctors] = useState([]);\r\n    const doctorOpacity = useRef(new Animated.Value(0)).current;\r\n    const getToken = async () => {\r\n        const token = await AsyncStorage.getItem('auth_token');\r\n        return token;\r\n      }\r\n\r\n    useEffect(() => {\r\n        fetchServiceList();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchDoctorList(selectedService);\r\n    }, [selectedService]);\r\n\r\n    const fetchServiceList = async () => {\r\n        const token = await getToken();\r\n        const fetchedServices = await getServiceList(token);\r\n        if (Array.isArray(fetchedServices)) {\r\n            setServices(fetchedServices);\r\n        } else {\r\n            console.error(\"Fetched services is not an array.\");\r\n        }\r\n    };\r\n    \r\n    const fetchDoctorList = async (specialty) => {\r\n        console.log('fetchDoctorList', specialty);\r\n        if (!specialty) {\r\n            setDoctors([]);\r\n            setSelectedDoctor('');\r\n            onServiceDoctorSelected('', '');\r\n            return;\r\n        }\r\n        try {\r\n            const token = await getToken();\r\n            // Assuming your API returns an array of doctor objects\r\n            const fetchedDoctors = await getDoctorList(specialty, token);\r\n            console.log('fetchedDoctors', fetchedDoctors);\r\n            setDoctors(fetchedDoctors.map(doctor => doctor.name));\r\n            animateDoctor();\r\n            if (fetchedDoctors.length > 0) {\r\n                const firstDoctorId = fetchedDoctors[0].id; // Assuming each doctor object has an id\r\n                console.log('firstDoctorId', firstDoctorId);\r\n                setSelectedDoctor(firstDoctorId);\r\n                onServiceDoctorSelected(specialty, firstDoctorId);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching doctor list:', error);\r\n        }\r\n    };\r\n    const animateDoctor = () => {\r\n        Animated.timing(doctorOpacity, {\r\n            toValue: 1,\r\n            duration: 500,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    const handleServiceChange = (service) => {\r\n        setSelectedService(service);\r\n        setSelectedDoctor('');\r\n    };\r\n\r\n    const handleDoctorChange = (doctor) => {\r\n        setSelectedDoctor(doctor);\r\n        onServiceDoctorSelected(selectedService, doctor);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <Text style={styles.label}>Service:</Text>\r\n            <Picker\r\n                selectedValue={selectedService}\r\n                onValueChange={handleServiceChange}\r\n                style={styles.picker}\r\n            >\r\n                <Picker.Item label=\"Choisir un service\" value=\"\" />\r\n                {services.map((service, index) => (\r\n                    <Picker.Item key={index} label={service} value={service} />\r\n                ))}\r\n            </Picker>\r\n            {selectedService && doctors.length > 0 && (\r\n                <>\r\n                    <Text style={styles.label}>Doctor:</Text>\r\n                    <Animated.View style={{ opacity: doctorOpacity }}>\r\n                        <Picker\r\n                            selectedValue={selectedDoctor}\r\n                            onValueChange={handleDoctorChange}\r\n                            style={styles.picker2}\r\n                        >\r\n                            {doctors.map((doctor, index) => (\r\n                                <Picker.Item key={index} label={doctor} value={doctor} />\r\n                            ))}\r\n                        </Picker>\r\n                    </Animated.View>\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    label: {\r\n        fontSize: 14, \r\n        fontWeight: 'bold',\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ddd',\r\n\r\n    },\r\n    picker: {\r\n        marginBottom: 1, // Reduce the margin\r\n        height: 40, \r\n    },\r\n    picker2: {\r\n        marginBottom: 15, \r\n        height: 40, \r\n    },\r\n});\r\n\r\nexport default AgendaLibellePicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}