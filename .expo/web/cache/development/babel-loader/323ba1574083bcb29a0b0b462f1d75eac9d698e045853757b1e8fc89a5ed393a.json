{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PatientListItem = function PatientListItem(_ref) {\n  var patient = _ref.patient,\n    onSelect = _ref.onSelect,\n    appointmentTime = _ref.appointmentTime;\n  var getAppointmentTypeColor = function getAppointmentTypeColor() {\n    if (new Date(appointmentTime) < new Date()) {\n      return '#ff4d4d';\n    }\n    return '#4d79ff';\n  };\n  return _jsxs(TouchableOpacity, {\n    onPress: function onPress() {\n      return onSelect(patient.nip);\n    },\n    style: styles.patientCard,\n    children: [_jsxs(View, {\n      style: styles.timeContainer,\n      children: [_jsx(Text, {\n        style: styles.appointmentTime,\n        children: appointmentTime\n      }), _jsx(Icon, {\n        name: \"clock-outline\",\n        size: 16,\n        color: \"#555\"\n      })]\n    }), _jsx(View, {\n      style: [styles.typeIndicator, {\n        backgroundColor: getAppointmentTypeColor()\n      }]\n    }), _jsxs(Text, {\n      style: styles.patientName,\n      children: [patient.firstname, \" \", patient.name]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  patientCard: {\n    backgroundColor: '#fff',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    marginVertical: 5,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 6,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  },\n  timeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10\n  },\n  appointmentTime: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginRight: 5\n  },\n  typeIndicator: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 10\n  },\n  patientName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default PatientListItem;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","Icon","jsx","_jsx","jsxs","_jsxs","PatientListItem","_ref","patient","onSelect","appointmentTime","getAppointmentTypeColor","Date","onPress","nip","style","styles","patientCard","children","timeContainer","name","size","color","typeIndicator","backgroundColor","patientName","firstname","create","flexDirection","alignItems","padding","marginVertical","borderColor","borderWidth","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginRight","fontSize","fontWeight"],"sources":["C:/Users/littl/Desktop/saeapp/frontend/src/features/patients/components/PatientListItem.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst PatientListItem = ({ patient, onSelect, appointmentTime }) => {\r\n    const getAppointmentTypeColor = () => {\r\n        if (new Date(appointmentTime) < new Date()) {\r\n            return '#ff4d4d';\r\n        }\r\n        return '#4d79ff';\r\n\r\n    };\r\n\r\n    return (\r\n        <TouchableOpacity onPress={() => onSelect(patient.nip)} style={styles.patientCard}>\r\n            <View style={styles.timeContainer}>\r\n                <Text style={styles.appointmentTime}>{appointmentTime}</Text>\r\n                <Icon name=\"clock-outline\" size={16} color=\"#555\" />\r\n            </View>\r\n            <View style={[styles.typeIndicator, { backgroundColor: getAppointmentTypeColor() }]} />\r\n            <Text style={styles.patientName}>{patient.firstname} {patient.name}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    patientCard: {\r\n        backgroundColor: '#fff',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginVertical: 5,\r\n        borderColor: '#ddd',\r\n        borderWidth: 1,\r\n        borderRadius: 6,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 1 },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n    },\r\n    timeContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginRight: 10,\r\n    },\r\n    appointmentTime: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        marginRight: 5,\r\n    },\r\n    typeIndicator: {\r\n        width: 10,\r\n        height: 10,\r\n        borderRadius: 5,\r\n        marginRight: 10,\r\n    },\r\n    patientName: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default PatientListItem;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,IAAI;AAAyD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAA+C;EAAA,IAAzCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;EACzD,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;IAClC,IAAI,IAAIC,IAAI,CAACF,eAAe,CAAC,GAAG,IAAIE,IAAI,CAAC,CAAC,EAAE;MACxC,OAAO,SAAS;IACpB;IACA,OAAO,SAAS;EAEpB,CAAC;EAED,OACIP,KAAA,CAACN,gBAAgB;IAACc,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMJ,QAAQ,CAACD,OAAO,CAACM,GAAG,CAAC;IAAA,CAAC;IAACC,KAAK,EAAEC,MAAM,CAACC,WAAY;IAAAC,QAAA,GAC9Eb,KAAA,CAACR,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACG,aAAc;MAAAD,QAAA,GAC9Bf,IAAA,CAACL,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACN,eAAgB;QAAAQ,QAAA,EAAER;MAAe,CAAO,CAAC,EAC7DP,IAAA,CAACF,IAAI;QAACmB,IAAI,EAAC,eAAe;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CAClD,CAAC,EACPnB,IAAA,CAACN,IAAI;MAACkB,KAAK,EAAE,CAACC,MAAM,CAACO,aAAa,EAAE;QAAEC,eAAe,EAAEb,uBAAuB,CAAC;MAAE,CAAC;IAAE,CAAE,CAAC,EACvFN,KAAA,CAACP,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACS,WAAY;MAAAP,QAAA,GAAEV,OAAO,CAACkB,SAAS,EAAC,GAAC,EAAClB,OAAO,CAACY,IAAI;IAAA,CAAO,CAAC;EAAA,CAC5D,CAAC;AAE3B,CAAC;AAED,IAAMJ,MAAM,GAAGhB,UAAU,CAAC2B,MAAM,CAAC;EAC7BV,WAAW,EAAE;IACTO,eAAe,EAAE,MAAM;IACvBI,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,CAAC;IACjBC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACf,CAAC;EACDtB,aAAa,EAAE;IACXS,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBa,WAAW,EAAE;EACjB,CAAC;EACDhC,eAAe,EAAE;IACbiC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBF,WAAW,EAAE;EACjB,CAAC;EACDnB,aAAa,EAAE;IACXc,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVJ,YAAY,EAAE,CAAC;IACfQ,WAAW,EAAE;EACjB,CAAC;EACDjB,WAAW,EAAE;IACTkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAetC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}