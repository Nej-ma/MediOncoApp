{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerContent from \"../components/DrawerContent\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport InfoScreen from \"../screens/InfoScreen\";\nimport StackNavigator from \"./StackNavigator\";\nimport { useAuthContext } from \"../context/authContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DrawerNavigator = function DrawerNavigator() {\n  var Drawer = createDrawerNavigator();\n  var _useAuthContext = useAuthContext(),\n    isLoggedIn = _useAuthContext.isLoggedIn,\n    user = _useAuthContext.user,\n    logout = _useAuthContext.logout;\n  console.log(\"DrawerNavigator isLoggedIn:\", isLoggedIn);\n  console.log(\"DrawerNavigator user:\", user);\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      swipeEnabled: isLoggedIn,\n      drawerLockMode: isLoggedIn ? 'unlocked' : 'locked-closed'\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(DrawerContent, _objectSpread({}, props));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"HomeStack\",\n      component: StackNavigator\n    }), _jsx(Drawer.Screen, {\n      name: \"Profil\",\n      component: ProfileScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Param\\xE8tres\",\n      component: SettingsScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Info\",\n      component: InfoScreen\n    })]\n  });\n};\nexport default DrawerNavigator;","map":{"version":3,"names":["React","createDrawerNavigator","DrawerContent","ProfileScreen","SettingsScreen","InfoScreen","StackNavigator","useAuthContext","jsx","_jsx","jsxs","_jsxs","DrawerNavigator","Drawer","_useAuthContext","isLoggedIn","user","logout","console","log","Navigator","screenOptions","headerShown","swipeEnabled","drawerLockMode","drawerContent","props","_objectSpread","children","Screen","name","component"],"sources":["C:/Users/littl/Desktop/saeapp/frontend/src/navigation/DrawerNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport DrawerContent from '../components/DrawerContent';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport InfoScreen from '../screens/InfoScreen';\r\nimport StackNavigator from './StackNavigator'; \r\nimport { useAuthContext } from '../context/authContext';\r\n\r\n\r\nconst DrawerNavigator = () => {\r\n  const Drawer = createDrawerNavigator();\r\n  const { isLoggedIn, user, logout } = useAuthContext();\r\n  console.log(\"DrawerNavigator isLoggedIn:\", isLoggedIn);\r\n  console.log(\"DrawerNavigator user:\", user);\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      swipeEnabled: isLoggedIn,\r\n      drawerLockMode: isLoggedIn ? 'unlocked' : 'locked-closed',\r\n    }}\r\n    drawerContent={(props) => <DrawerContent {...props} />}\r\n  >\r\n      <Drawer.Screen name=\"HomeStack\" component={StackNavigator} />\r\n      <Drawer.Screen name=\"Profil\" component={ProfileScreen} />\r\n      <Drawer.Screen name=\"ParamÃ¨tres\" component={SettingsScreen} />\r\n      <Drawer.Screen name=\"Info\" component={InfoScreen} />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default DrawerNavigator;\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,SAASC,cAAc;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAMC,MAAM,GAAGZ,qBAAqB,CAAC,CAAC;EACtC,IAAAa,eAAA,GAAqCP,cAAc,CAAC,CAAC;IAA7CQ,UAAU,GAAAD,eAAA,CAAVC,UAAU;IAAEC,IAAI,GAAAF,eAAA,CAAJE,IAAI;IAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;EAChCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,UAAU,CAAC;EACtDG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,IAAI,CAAC;EAE1C,OACEL,KAAA,CAACE,MAAM,CAACO,SAAS;IACjBC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAER,UAAU;MACxBS,cAAc,EAAET,UAAU,GAAG,UAAU,GAAG;IAC5C,CAAE;IACFU,aAAa,EAAE,SAAAA,cAACC,KAAK;MAAA,OAAKjB,IAAA,CAACP,aAAa,EAAAyB,aAAA,KAAKD,KAAK,CAAG,CAAC;IAAA,CAAC;IAAAE,QAAA,GAErDnB,IAAA,CAACI,MAAM,CAACgB,MAAM;MAACC,IAAI,EAAC,WAAW;MAACC,SAAS,EAAEzB;IAAe,CAAE,CAAC,EAC7DG,IAAA,CAACI,MAAM,CAACgB,MAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAE5B;IAAc,CAAE,CAAC,EACzDM,IAAA,CAACI,MAAM,CAACgB,MAAM;MAACC,IAAI,EAAC,eAAY;MAACC,SAAS,EAAE3B;IAAe,CAAE,CAAC,EAC9DK,IAAA,CAACI,MAAM,CAACgB,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAE1B;IAAW,CAAE,CAAC;EAAA,CACpC,CAAC;AAEvB,CAAC;AAED,eAAeO,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}