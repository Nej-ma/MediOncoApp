{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CustomHeader from \"../components/CustomHeader\";\nimport BottomMenu from \"../components/BottomMenu\";\nimport PatientListItem from \"../features/patients/components/PatientListItem\";\nimport FilterPanel from \"../features/patients/components/FilterPanel\";\nimport { getPatientsInAgenda } from \"../features/patients/services/patientsService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { addRecentPatient } from \"../utils/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AgendaScreen = function AgendaScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    patients = _useState2[0],\n    setPatients = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var getToken = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('auth_token');\n      return token;\n    });\n    return function getToken() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleFilterChange = function () {\n    var _ref3 = _asyncToGenerator(function* (filter) {\n      setLoading(true);\n      var token = yield getToken();\n      try {\n        var fetchedPatients = yield getPatientsInAgenda(filter.doctorId, filter.date, filter.starttime, filter.endtime, token);\n        setPatients(fetchedPatients);\n      } catch (error) {\n        console.error('Failed to fetch patients:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleFilterChange(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handlePatientSelect = function handlePatientSelect(patientId) {\n    addRecentPatient(patientId);\n    navigation.navigate('Patient', {\n      patientId: patientId\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(CustomHeader, {\n      navigation: navigation\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Agenda \"\n    }), _jsx(FilterPanel, {\n      onFilterChange: handleFilterChange\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\",\n      style: styles.loadingIndicator\n    }) : patients.length === 0 ? _jsx(Text, {\n      style: styles.emptyText,\n      children: \"Aucun patients trouv\\xE9s.\"\n    }) : _jsx(FlatList, {\n      data: patients,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(PatientListItem, {\n          patient: item,\n          onSelect: function onSelect() {\n            return handlePatientSelect(item.id);\n          }\n        });\n      },\n      style: styles.list\n    }), _jsx(BottomMenu, {\n      navigation: navigation\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 10\n  },\n  list: {\n    flex: 1\n  },\n  loadingIndicator: {\n    marginTop: 20\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: 'gray'\n  }\n});\nexport default AgendaScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","FlatList","ActivityIndicator","Text","CustomHeader","BottomMenu","PatientListItem","FilterPanel","getPatientsInAgenda","AsyncStorage","addRecentPatient","jsx","_jsx","jsxs","_jsxs","AgendaScreen","_ref","navigation","_useState","_useState2","_slicedToArray","patients","setPatients","_useState3","_useState4","loading","setLoading","getToken","_ref2","_asyncToGenerator","token","getItem","apply","arguments","handleFilterChange","_ref3","filter","fetchedPatients","doctorId","date","starttime","endtime","error","console","_x","handlePatientSelect","patientId","navigate","style","styles","container","children","title","onFilterChange","size","color","loadingIndicator","length","emptyText","data","keyExtractor","item","id","toString","renderItem","_ref4","patient","onSelect","list","create","flex","backgroundColor","fontSize","fontWeight","textAlign","marginVertical","marginTop"],"sources":["C:/Users/littl/Desktop/saeapp/frontend/src/screens/AgendaScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, FlatList, ActivityIndicator, Text } from 'react-native';\r\nimport CustomHeader from '../components/CustomHeader';\r\nimport BottomMenu from '../components/BottomMenu';\r\nimport PatientListItem from '../features/patients/components/PatientListItem';\r\nimport FilterPanel from '../features/patients/components/FilterPanel';\r\nimport { getPatientsInAgenda } from '../features/patients/services/patientsService';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { addRecentPatient } from '../utils/storage';\r\n\r\nconst AgendaScreen = ({ navigation }) => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const getToken = async () => {\r\n    const token = await AsyncStorage.getItem('auth_token');\r\n    return token;\r\n  }\r\n\r\n  const handleFilterChange = async (filter) => {\r\n    setLoading(true);\r\n    const token = await getToken();\r\n    try {\r\n        // Ensure filter contains a valid doctorId and date\r\n        const fetchedPatients = await getPatientsInAgenda(filter.doctorId, filter.date, filter.starttime, filter.endtime, token);\r\n        setPatients(fetchedPatients);\r\n    } catch (error) {\r\n        console.error('Failed to fetch patients:', error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\n  const handlePatientSelect = (patientId) => {\r\n    addRecentPatient(patientId);\r\n    navigation.navigate('Patient', { patientId });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <CustomHeader navigation={navigation} />\r\n      <Text style={styles.title}>Agenda </Text>\r\n      <FilterPanel onFilterChange={handleFilterChange} />\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" style={styles.loadingIndicator} />\r\n      ) : patients.length === 0 ? (\r\n        <Text style={styles.emptyText}>Aucun patients trouv√©s.</Text>\r\n      ) : (\r\n        <FlatList\r\n          data={patients}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({ item }) => (\r\n            <PatientListItem patient={item} onSelect={() => handlePatientSelect(item.id)} />\r\n          )}\r\n          style={styles.list}\r\n        />\r\n      )}\r\n      <BottomMenu navigation={navigation} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginVertical: 10,\r\n  },\r\n  list: {\r\n    flex: 1,\r\n  },\r\n  loadingIndicator: {\r\n    marginTop: 20,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n    fontSize: 16,\r\n    color: 'gray',\r\n  },\r\n});\r\n\r\nexport default AgendaScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAExC,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,eAAe;AACtB,OAAOC,WAAW;AAClB,SAASC,mBAAmB;AAC5B,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,gBAAgB;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,IAAAC,SAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA8BzB,QAAQ,CAAC,KAAK,CAAC;IAAA0B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAMG,QAAQ;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC3B,IAAMC,KAAK,SAASrB,YAAY,CAACsB,OAAO,CAAC,YAAY,CAAC;MACtD,OAAOD,KAAK;IACd,CAAC;IAAA,gBAHKH,QAAQA,CAAA;MAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGb;EAED,IAAMC,kBAAkB;IAAA,IAAAC,KAAA,GAAAN,iBAAA,CAAG,WAAOO,MAAM,EAAK;MAC3CV,UAAU,CAAC,IAAI,CAAC;MAChB,IAAMI,KAAK,SAASH,QAAQ,CAAC,CAAC;MAC9B,IAAI;QAEA,IAAMU,eAAe,SAAS7B,mBAAmB,CAAC4B,MAAM,CAACE,QAAQ,EAAEF,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACI,SAAS,EAAEJ,MAAM,CAACK,OAAO,EAAEX,KAAK,CAAC;QACxHR,WAAW,CAACe,eAAe,CAAC;MAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACNhB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAAA,gBAZOQ,kBAAkBA,CAAAU,EAAA;MAAA,OAAAT,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYzB;EAEC,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,SAAS,EAAK;IACzCpC,gBAAgB,CAACoC,SAAS,CAAC;IAC3B7B,UAAU,CAAC8B,QAAQ,CAAC,SAAS,EAAE;MAAED,SAAS,EAATA;IAAU,CAAC,CAAC;EAC/C,CAAC;EAED,OACEhC,KAAA,CAACf,IAAI;IAACiD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BvC,IAAA,CAACR,YAAY;MAACa,UAAU,EAAEA;IAAW,CAAE,CAAC,EACxCL,IAAA,CAACT,IAAI;MAAC6C,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAO,CAAM,CAAC,EACzCvC,IAAA,CAACL,WAAW;MAAC8C,cAAc,EAAEnB;IAAmB,CAAE,CAAC,EAClDT,OAAO,GACNb,IAAA,CAACV,iBAAiB;MAACoD,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,SAAS;MAACP,KAAK,EAAEC,MAAM,CAACO;IAAiB,CAAE,CAAC,GAChFnC,QAAQ,CAACoC,MAAM,KAAK,CAAC,GACvB7C,IAAA,CAACT,IAAI;MAAC6C,KAAK,EAAEC,MAAM,CAACS,SAAU;MAAAP,QAAA,EAAC;IAAuB,CAAM,CAAC,GAE7DvC,IAAA,CAACX,QAAQ;MACP0D,IAAI,EAAEtC,QAAS;MACfuC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;QAAA,OACjBjD,IAAA,CAACN,eAAe;UAAC4D,OAAO,EAAEL,IAAK;UAACM,QAAQ,EAAE,SAAAA,SAAA;YAAA,OAAMtB,mBAAmB,CAACgB,IAAI,CAACC,EAAE,CAAC;UAAA;QAAC,CAAE,CAAC;MAAA,CAChF;MACFd,KAAK,EAAEC,MAAM,CAACmB;IAAK,CACpB,CACF,EACDxD,IAAA,CAACP,UAAU;MAACY,UAAU,EAAEA;IAAW,CAAE,CAAC;EAAA,CAClC,CAAC;AAEX,CAAC;AAED,IAAMgC,MAAM,GAAGjD,UAAU,CAACqE,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDnB,KAAK,EAAE;IACLoB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE;EAClB,CAAC;EACDP,IAAI,EAAE;IACJE,IAAI,EAAE;EACR,CAAC;EACDd,gBAAgB,EAAE;IAChBoB,SAAS,EAAE;EACb,CAAC;EACDlB,SAAS,EAAE;IACTgB,SAAS,EAAE,QAAQ;IACnBE,SAAS,EAAE,EAAE;IACbJ,QAAQ,EAAE,EAAE;IACZjB,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAexC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}