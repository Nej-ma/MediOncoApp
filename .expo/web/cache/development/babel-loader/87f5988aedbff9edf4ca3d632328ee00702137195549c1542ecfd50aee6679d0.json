{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useAuthContext } from \"../../../context/authContext\";\nimport { CommonActions } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    username = _React$useState2[0],\n    setusername = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  var _useAuthContext = useAuthContext(),\n    loginError = _useAuthContext.loginError,\n    isLoggedIn = _useAuthContext.isLoggedIn,\n    login = _useAuthContext.login;\n  var navigation = useNavigation();\n  useEffect(function () {\n    console.log('LoginForm:', isLoggedIn);\n    if (isLoggedIn) {\n      navigation.dispatch(CommonActions.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      }));\n    }\n  }, [isLoggedIn, navigation]);\n  var handleLogin = function handleLogin() {\n    console.log('handlelogin in LoginForm:', isLoggedIn);\n    login(username, password);\n  };\n  var handleLoginAuto = function handleLoginAuto() {\n    setusername('cristina.yang');\n    setPassword('cricri123');\n  };\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setusername,\n      value: username,\n      placeholder: \"Identifiant\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setPassword,\n      value: password,\n      placeholder: \"Mot de passe\",\n      secureTextEntry: true\n    }), loginError ? _jsx(Text, {\n      style: styles.errorText,\n      children: loginError\n    }) : null, _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Connexion\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  errorText: {\n    color: 'red',\n    fontSize: 14,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  inputContainer: {\n    width: '100%',\n    marginBottom: 20\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    fontSize: 16\n  },\n  button: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#5A709F',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginForm;","map":{"version":3,"names":["React","useEffect","View","TextInput","TouchableOpacity","Text","StyleSheet","useNavigation","useAuthContext","CommonActions","jsx","_jsx","jsxs","_jsxs","LoginForm","_React$useState","useState","_React$useState2","_slicedToArray","username","setusername","_React$useState3","_React$useState4","password","setPassword","_useAuthContext","loginError","isLoggedIn","login","navigation","console","log","dispatch","reset","index","routes","name","handleLogin","handleLoginAuto","style","styles","inputContainer","children","input","onChangeText","value","placeholder","keyboardType","secureTextEntry","errorText","button","onPress","buttonText","create","color","fontSize","marginBottom","textAlign","width","height","borderColor","borderWidth","borderRadius","padding","backgroundColor","justifyContent","alignItems","fontWeight"],"sources":["C:/Users/littl/Desktop/saeapp/frontend/src/features/authentication/components/LoginForm.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, TextInput, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useAuthContext } from '../../../context/authContext';\r\nimport { CommonActions } from '@react-navigation/native';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setusername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const { loginError, isLoggedIn, login } = useAuthContext();\r\n    const navigation = useNavigation();\r\n    \r\n    useEffect(() => {\r\n        console.log('LoginForm:', isLoggedIn);\r\n\r\n        if (isLoggedIn) {\r\n            navigation.dispatch(\r\n                CommonActions.reset({\r\n                    index: 0,\r\n                    routes: [{ name: 'Home' }],\r\n                })\r\n            );\r\n        }\r\n    }, [isLoggedIn, navigation]);\r\n\r\n    const handleLogin = () => {\r\n        console.log('handlelogin in LoginForm:', isLoggedIn);\r\n        \r\n        login(username, password);\r\n    };\r\n\r\n    const handleLoginAuto = () => {\r\n        setusername('cristina.yang');\r\n        setPassword('cricri123');\r\n\r\n    };\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setusername}\r\n                value={username}\r\n                placeholder=\"Identifiant\"\r\n                keyboardType=\"email-address\"\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setPassword}\r\n                value={password}\r\n                placeholder=\"Mot de passe\"\r\n                secureTextEntry\r\n\r\n            />            \r\n\r\n            {loginError ? <Text style={styles.errorText}>{loginError}</Text> : null}\r\n            <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n                <Text style={styles.buttonText}>Connexion</Text>\r\n            </TouchableOpacity>\r\n\r\n            \r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    errorText: {\r\n        color: 'red',\r\n        fontSize: 14,\r\n        marginBottom: 10, \r\n        textAlign: 'center',\r\n    },\r\n    inputContainer: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        height: 50,\r\n        borderColor: '#ccc',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        height: 50,\r\n        backgroundColor: '#5A709F',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 20,\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default LoginForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEzC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,cAAc;AACvB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACpB,IAAAC,eAAA,GAAgCf,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA3CI,QAAQ,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EAC5B,IAAAI,gBAAA,GAAgCrB,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA3CE,QAAQ,GAAAD,gBAAA;IAAEE,WAAW,GAAAF,gBAAA;EAC5B,IAAAG,eAAA,GAA0CjB,cAAc,CAAC,CAAC;IAAlDkB,UAAU,GAAAD,eAAA,CAAVC,UAAU;IAAEC,UAAU,GAAAF,eAAA,CAAVE,UAAU;IAAEC,KAAK,GAAAH,eAAA,CAALG,KAAK;EACrC,IAAMC,UAAU,GAAGtB,aAAa,CAAC,CAAC;EAElCN,SAAS,CAAC,YAAM;IACZ6B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,UAAU,CAAC;IAErC,IAAIA,UAAU,EAAE;MACZE,UAAU,CAACG,QAAQ,CACfvB,aAAa,CAACwB,KAAK,CAAC;QAChBC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC;MAC7B,CAAC,CACL,CAAC;IACL;EACJ,CAAC,EAAE,CAACT,UAAU,EAAEE,UAAU,CAAC,CAAC;EAE5B,IAAMQ,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBP,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,UAAU,CAAC;IAEpDC,KAAK,CAACT,QAAQ,EAAEI,QAAQ,CAAC;EAC7B,CAAC;EAED,IAAMe,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC1BlB,WAAW,CAAC,eAAe,CAAC;IAC5BI,WAAW,CAAC,WAAW,CAAC;EAE5B,CAAC;EAED,OACIX,KAAA,CAACX,IAAI;IAACqC,KAAK,EAAEC,MAAM,CAACC,cAAe;IAAAC,QAAA,GAC/B/B,IAAA,CAACR,SAAS;MACNoC,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,YAAY,EAAExB,WAAY;MAC1ByB,KAAK,EAAE1B,QAAS;MAChB2B,WAAW,EAAC,aAAa;MACzBC,YAAY,EAAC;IAAe,CAC/B,CAAC,EACFpC,IAAA,CAACR,SAAS;MACNoC,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,YAAY,EAAEpB,WAAY;MAC1BqB,KAAK,EAAEtB,QAAS;MAChBuB,WAAW,EAAC,cAAc;MAC1BE,eAAe;IAAA,CAElB,CAAC,EAEDtB,UAAU,GAAGf,IAAA,CAACN,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACS,SAAU;MAAAP,QAAA,EAAEhB;IAAU,CAAO,CAAC,GAAG,IAAI,EACvEf,IAAA,CAACP,gBAAgB;MAACmC,KAAK,EAAEC,MAAM,CAACU,MAAO;MAACC,OAAO,EAAEd,WAAY;MAAAK,QAAA,EACzD/B,IAAA,CAACN,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAACY,UAAW;QAAAV,QAAA,EAAC;MAAS,CAAM;IAAC,CAClC,CAAC;EAAA,CAGjB,CAAC;AAEf,CAAC;AAED,IAAMF,MAAM,GAAGlC,UAAU,CAAC+C,MAAM,CAAC;EAC7BJ,SAAS,EAAE;IACPK,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACf,CAAC;EACDhB,cAAc,EAAE;IACZiB,KAAK,EAAE,MAAM;IACbF,YAAY,EAAE;EAClB,CAAC;EACDb,KAAK,EAAE;IACHe,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXP,YAAY,EAAE,EAAE;IAChBD,QAAQ,EAAE;EACd,CAAC;EACDL,MAAM,EAAE;IACJQ,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVK,eAAe,EAAE,SAAS;IAC1BC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBJ,YAAY,EAAE,CAAC;IACfN,YAAY,EAAE;EAClB,CAAC;EACDJ,UAAU,EAAE;IACRE,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZY,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAerD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}